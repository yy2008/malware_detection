#!/usr/bin/env python

import argparse
import malware_db
import malware_util


class InvalidURL(Exception):
    pass


class MalwareDetection(object):
    def __init__(self):
        self.db = malware_db.MalwareDatabase()

    def isMalware(self, url):
        """

        :param url: URL of the APK file
        :return: inspection results, status, or errors
        -3000:  Error when trying to retrieve report from virustotal.com
        -2000:  Error when trying to upload APK file to virustotal.com
        -601:   Missing content-length header
        -600:   Connection Error
        -5xx:   HTTP server error
        -4xx:   HTTP client error
        -1:     Database operation error
        1:      not malicious
        2:      malicious
        3:      remote inspection at virustotal.com in progress
        """

        task = dict(url=url)
        task = self.db.initialize(task)

        for check_func in ['check_url',
                           'check_metadata',
                           'check_md5',
                           'check_virustotal']:
            if 'error' in task:
                return task['error']
            if 'ismalware' in task:
                return task['ismalware']

            task = getattr(self.db, check_func)(task)
            if ('ismalware' in task and
                    task['ismalware'] == malware_util.MALWARE_PENDING):
                task = self.db.check_and_update(task)

        if 'error' in task:
            return task['error']
        return task['ismalware']


def main():
    parser = argparse.ArgumentParser(
        description="Check if a file contains malware"
    )
    parser.add_argument(
        "url",
        help="the URL of the file to be inspected"
    )
    args = parser.parse_args()
    detector = MalwareDetection()
    res = detector.isMalware(args.url)

    if res == 1:
        print "URL {} is not malicious".format(args.url)
    elif res == 2:
        print "URL {} is malicious".format(args.url)
    elif res == 3:
        print "URL {} is pending for inspection at virustotal".format(args.url)
    else:
        print "Error code: {} ".format(res)

if __name__ == "__main__":
    main()
